os: linux

dist: bionic

language: python

python:
  - '3.12'

env:
  global:
  - BROKER_DB_HOST=localhost
  - BROKER_DB_PORT=5435
  - ERROR_REPORT_PATH="dataactcore/tmp/"
  - ERROR_REPORT_PATH_ESCAPED="dataactcore\/tmp\/"

before_install:
  - pip install setuptools==68.1.2

install:
  # NOTE: no pip install needed as long as the one of the docker containers started below builds the
  # `dataact-broker-backend` image, which has a volume bound to the source dir, and runs pip install to pull down deps
  # Use the comment below to skip the travis automatic pip install -r requirements.txt
  #  - pip --version

before_script:
  - cp dataactcore/config_example.yml dataactcore/config.yml
  - cp dataactcore/local_config_example.yml dataactcore/local_config.yml
  - cp dataactcore/local_secrets_example.yml dataactcore/local_secrets.yml
  - mkdir ${ERROR_REPORT_PATH}
  - 'sed -i.bak -E "s/host:.*$/host: ${BROKER_DB_HOST}/" dataactcore/local_config.yml'
  - 'sed -i.bak -E "s/port:.*$/port: ${BROKER_DB_PORT}/" dataactcore/local_config.yml'
  - 'sed -i.bak -E "s/error_report_path:.*$/error_report_path: ${ERROR_REPORT_PATH_ESCAPED}/" dataactcore/local_config.yml'
  # Start a containerized database to use for tests, which also pulls pip packages required for build as the image is built
  - docker-compose up -d --quiet-pull dataact-broker-db dataact-broker-init-db

script:
  # Comment these out if we need to run in the Docker image
  #  - docker exec -it dataact-broker-backend /bin/bash -c 'flake8'
  #  - docker exec -it dataact-broker-backend /bin/bash -c 'pytest tests/unit/* --junitxml=tests/test-results.xml'
  #  - docker exec -it dataact-broker-backend /bin/bash -c 'pytest tests/integration/* --junitxml=tests/test-results.xml'
  - flake8
  - black --check --diff .
  - pytest tests/unit --junitxml=tests/test-results.xml
  - pytest tests/integration --junitxml=tests/test-results.xml

after_script:
  - docker-compose down
  - rm -r ${ERROR_REPORT_PATH}
